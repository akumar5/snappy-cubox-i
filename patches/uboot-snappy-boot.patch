commit 6fea1952f5e7b054f90d46967646644f38683f5e
Author: Janez Troha <dz0ny@ubuntu.si>
Date:   Sun Feb 8 14:42:33 2015 +0100

    Custom boot script for snappy

diff --git a/include/configs/mx6_cubox-i.h b/include/configs/mx6_cubox-i.h
index 8de47bb..bc4ba86 100644
--- a/include/configs/mx6_cubox-i.h
+++ b/include/configs/mx6_cubox-i.h
@@ -5,7 +5,7 @@
  *
  * Configuration settings for the SolidRun carrier-1 (c1) board.
  *
- * SPDX-License-Identifier:	GPL-2.0+
+ * SPDX-License-Identifier: GPL-2.0+
  */
 
 #ifndef __CONFIG_H
@@ -30,7 +30,7 @@
 #define CONFIG_REVISION_TAG
 
 /* Size of malloc() pool */
-#define CONFIG_SYS_MALLOC_LEN		(8 * SZ_1M)
+#define CONFIG_SYS_MALLOC_LEN   (8 * SZ_1M)
 
 #define CONFIG_BOARD_EARLY_INIT_F
 #define CONFIG_BOARD_LATE_INIT
@@ -42,12 +42,12 @@
 #endif
 
 #define CONFIG_MXC_UART
-#define CONFIG_MXC_UART_BASE		UART1_BASE
+#define CONFIG_MXC_UART_BASE    UART1_BASE
 
 /* allow to overwrite serial and ethaddr */
 #define CONFIG_ENV_OVERWRITE
-#define CONFIG_CONS_INDEX		1
-#define CONFIG_BAUDRATE			115200
+#define CONFIG_CONS_INDEX   1
+#define CONFIG_BAUDRATE     115200
 
 /* Command definition */
 #include <config_cmd_default.h>
@@ -59,16 +59,16 @@
 #define CONFIG_CMD_SETEXPR
 #define CONFIG_CMD_MEMTEST
 
-#define CONFIG_BOOTDELAY		3
+#define CONFIG_BOOTDELAY    3
 
-#define CONFIG_SYS_MEMTEST_START	0x10000000
-#define CONFIG_SYS_MEMTEST_END		(CONFIG_SYS_MEMTEST_START + 500 * SZ_1M)
+#define CONFIG_SYS_MEMTEST_START  0x10000000
+#define CONFIG_SYS_MEMTEST_END    (CONFIG_SYS_MEMTEST_START + 500 * SZ_1M)
 
-#define CONFIG_LOADADDR			0x10800000
-/*#define CONFIG_SYS_TEXT_BASE		0x17800000*/
+#define CONFIG_LOADADDR     0x10800000
+/*#define CONFIG_SYS_TEXT_BASE    0x17800000*/
 
 #define CONFIG_SYS_L2_PL310
-#define CONFIG_SYS_PL310_BASE		0x00a02000
+#define CONFIG_SYS_PL310_BASE   0x00a02000
 
 /* SATA Configuration */
 #ifdef CONFIG_CMD_SATA
@@ -83,8 +83,8 @@
 /* MMC Configuration */
 #define CONFIG_FSL_ESDHC
 #define CONFIG_FSL_USDHC
-#define CONFIG_SYS_FSL_USDHC_NUM	1
-#define CONFIG_SYS_FSL_ESDHC_ADDR	0
+#define CONFIG_SYS_FSL_USDHC_NUM  1
+#define CONFIG_SYS_FSL_ESDHC_ADDR 0
 
 #define CONFIG_MMC
 #define CONFIG_CMD_MMC
@@ -107,9 +107,9 @@
 #define CONFIG_CMD_NET
 #define CONFIG_FEC_MXC
 #define CONFIG_MII
-#define IMX_FEC_BASE			ENET_BASE_ADDR
-#define CONFIG_FEC_XCV_TYPE		RGMII
-#define CONFIG_ETHPRIME			"FEC"
+#define IMX_FEC_BASE      ENET_BASE_ADDR
+#define CONFIG_FEC_XCV_TYPE   RGMII
+#define CONFIG_ETHPRIME     "FEC"
 #define CONFIG_PHYLIB
 #define CONFIG_PHY_ATHEROS
 #endif
@@ -158,7 +158,7 @@
         "script=boot.scr\0" \
         "bootfile=auto\0" \
         "bootenv=uEnv.txt\0" \
-        "boot_prefixes=/ /boot/\0" \
+        "file_prefix=/\0" \
         "console=ttymxc0\0" \
         "stdin=serial,usbkbd\0" \
         "stdout=serial,vga\0" \
@@ -172,20 +172,6 @@
         "mmcdev=" __stringify(CONFIG_SYS_MMC_ENV_DEV) "\0" \
         "mmcpart=1\0" \
         "mmcroot=/dev/mmcblk0p2 rootwait rw\0" \
-        "update_sd_firmware_filename=u-boot.imx\0" \
-        "update_sd_firmware=" \
-                "if test ${ip_dyn} = yes; then " \
-                        "setenv get_cmd dhcp; " \
-                "else " \
-                        "setenv get_cmd tftp; " \
-                "fi; " \
-                "if mmc dev ${mmcdev}; then "   \
-                        "if ${get_cmd} ${update_sd_firmware_filename}; then " \
-                                "setexpr fw_sz ${filesize} / 0x200; " \
-                                "setexpr fw_sz ${fw_sz} + 1; "  \
-                                "mmc write ${loadaddr} 0x2 ${fw_sz}; " \
-                        "fi; "  \
-                "fi;\0" \
         "mmcargs=setenv bootargs console=${console},${baudrate} " \
                 "root=${mmcroot};\0" \
         "loadbootscript=" \
@@ -203,160 +189,62 @@
                         "setenv fdt_file ${fdt_prefix}-hummingboard.dtb; " \
                 "fi;\0" \
         "loadbootenv=load mmc ${mmcdev}:${mmcpart} ${loadaddr} ${file_prefix}${bootenv};\0" \
-        "loadfdt=if test ${boottype} = mmc; then " \
-                     "load mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${file_prefix}${fdt_file}; " \
-		"else " \
-                     "${get_cmd} ${fdt_addr} ${fdt_file}; " \
-		"fi;\0 " \
-        "loadramdisk=if test ${boottype} = mmc; then " \
-                     "load mmc ${mmcdev}:${mmcpart} ${ramdisk_addr} ${file_prefix}${ramdisk_file}; " \
-		"else " \
-                     "${get_cmd} ${ramdisk_addr} ${ramdisk_file}; " \
-		"fi;\0 " \
-        "loadbootfile=load mmc ${mmcdev}:${mmcpart} ${loadaddr} ${file_prefix}${bootfile};\0" \
         "importbootenv=echo Importing environment from mmc${mmcdev} ...; " \
                 "env import -t ${loadaddr} ${filesize};\0" \
-        "autoboot=echo Booting ${boot_file}; " \
-		"if test ${boot_file} = zImage; then " \
-		    "bootz ${loadaddr} ${ramdisk_addr} ${fdt_addr}; " \
-		"else " \
-		    "bootm ${loadaddr} ${ramdisk_addr} ${fdt_addr}; " \
-		"fi;\0 " \
-	"bootit=setenv boot_file ${bootfile}; " \
-                "if test -n ${ramdisk_file}; then " \
-		    "if run loadramdisk; then " \
-			"echo Loaded ${ramdisk_file}; " \
-		    "else " \
-			"setenv ramdisk_addr -; " \
-		    "fi; " \
-		"else " \
-		    "setenv ramdisk_addr -; " \
-                "fi; " \
-                "if test ${boot_file} = zImage; then " \
-                    "if test ${boot_fdt} = yes || test ${boot_fdt} = try; then " \
-                        "if run loadfdt; then " \
-			    "echo Loaded ${fdt_file}; " \
-                        "else " \
-			    "setenv fdt_addr; " \
-                            "if test ${boot_fdt} = try; then " \
-                                  "echo WARN: Cannot load the DTB and boot file is type zImage;" \
-                                  "echo if you have not appended a dtb to the file it may;" \
-                                  "echo hang after displaying Starting kernel...;" \
-                                  "echo ;" \
-                            "else " \
-                                  "echo WARN: Cannot load the DT; " \
-                            "fi; " \
-                        "fi; " \
-                    "else " \
-			"setenv fdt_addr; "\
-                    "fi; " \
-                "else " \
-			"setenv fdt_addr; " \
-                "fi; " \
-                "run autoboot;\0 " \
-        "mmcboot=echo Booting from mmc ...; " \
-                "run mmcargs; " \
-                "setenv boottype mmc; " \
-                "run bootit;\0 " \
-        "netargs=setenv bootargs console=${console},${baudrate} " \
-                "root=/dev/nfs ip=dhcp nfsroot=${serverip}:${nfsroot},v3,tcp;\0" \
-        "netboot=echo Booting from net ...; " \
-                "run netargs; " \
-                "setenv boottype net; " \
-                "if test ${ip_dyn} = yes; then " \
-                    "setenv get_cmd dhcp; " \
+        "loadfdt=if test ${boottype} = mmc; then " \
+                  "load mmc ${mmcdev}:${mmcpart} ${fdt_addr} ${file_prefix}${fdt_file}; " \
                 "else " \
-                    "setenv get_cmd tftp; " \
-                "fi; " \
-                "if test ${bootfile} = auto; then " \
-                     "setenv bootfile zImage; " \
-                     "if ${get_cmd} ${bootfile}; then " \
-                         "run bootit; " \
-                     "else " \
-                         "setenv bootfile uImage; " \
-                     "fi; " \
-                " fi; " \
-                "${get_cmd} ${bootfile}; " \
-                "run bootit;\0 "
-
-#define CONFIG_BOOTCOMMAND \
-	   "mmc dev ${mmcdev}; if mmc rescan; then " \
-               "for prefix in ${boot_prefixes}; do " \
-		   "setenv file_prefix ${prefix}; " \
-		   "if run loadbootscript; then " \
-			   "run bootscript; " \
-		   "else " \
-			   "run autodetectfdt; " \
-			   "if run loadbootenv; then " \
-				   "run importbootenv; " \
-			   "fi; " \
-			   "if test -n ${serverip}; then " \
-				   "run netboot; " \
-			   "fi; " \
-                           "if test ${bootfile} = auto; then " \
-                                   "setenv origbootfile auto; " \
-                                   "setenv bootfile zImage; " \
-                                   "if run loadbootfile; then " \
-                                        "run mmcboot; " \
-                                   "else " \
-                                        "setenv bootfile uImage; " \
-                                   "fi; " \
-                           "fi; " \
-			   "if run loadbootfile; then " \
-				   "run mmcboot; " \
-			   "else " \
-				   "setenv bootfile ${origbootfile}; " \
-			   "fi; " \
-		   "fi; " \
-	       "done; " \
-	   "fi; " \
-	   "run netboot;\0 "
+                  "${get_cmd} ${fdt_addr} ${fdt_file}; " \
+                "fi;\0 "
+
+
+#define CONFIG_BOOTCOMMAND "run loadbootscript; run bootscript;\0 "
 
 /* Miscellaneous configurable options */
 #define CONFIG_SYS_LONGHELP
 #define CONFIG_SYS_HUSH_PARSER
 #define CONFIG_SUPPORT_RAW_INITRD
 #define CONFIG_FAT_WRITE
-     
+
 #ifndef __ASSEMBLY__
 extern char *config_sys_prompt;
 #endif
-#define CONFIG_SYS_PROMPT_MAX_CHARS	32
-#define CONFIG_SYS_PROMPT		config_sys_prompt
+#define CONFIG_SYS_PROMPT_MAX_CHARS 32
+#define CONFIG_SYS_PROMPT   config_sys_prompt
 #define CONFIG_AUTO_COMPLETE
-#define CONFIG_SYS_CBSIZE		1024
+#define CONFIG_SYS_CBSIZE   1024
 
 /* Print Buffer Size */
 #define CONFIG_SYS_PBSIZE (CONFIG_SYS_CBSIZE + CONFIG_SYS_PROMPT_MAX_CHARS + 16)
-#define CONFIG_SYS_MAXARGS	       16
+#define CONFIG_SYS_MAXARGS         16
 #define CONFIG_SYS_BARGSIZE CONFIG_SYS_CBSIZE
 
-#define CONFIG_SYS_LOAD_ADDR		CONFIG_LOADADDR
-#define CONFIG_SYS_HZ			1000
+#define CONFIG_SYS_LOAD_ADDR    CONFIG_LOADADDR
+#define CONFIG_SYS_HZ     1000
 
 #define CONFIG_CMDLINE_EDITING
 
 /* Physical Memory Map */
-#define CONFIG_NR_DRAM_BANKS		1
-#define PHYS_SDRAM			MMDC0_ARB_BASE_ADDR
+#define CONFIG_NR_DRAM_BANKS    1
+#define PHYS_SDRAM      MMDC0_ARB_BASE_ADDR
 
-#define CONFIG_SYS_SDRAM_BASE		PHYS_SDRAM
-#define CONFIG_SYS_INIT_RAM_ADDR	IRAM_BASE_ADDR
-#define CONFIG_SYS_INIT_RAM_SIZE	IRAM_SIZE
+#define CONFIG_SYS_SDRAM_BASE   PHYS_SDRAM
+#define CONFIG_SYS_INIT_RAM_ADDR  IRAM_BASE_ADDR
+#define CONFIG_SYS_INIT_RAM_SIZE  IRAM_SIZE
 
 #define CONFIG_SYS_INIT_SP_OFFSET \
-	(CONFIG_SYS_INIT_RAM_SIZE - GENERATED_GBL_DATA_SIZE)
+  (CONFIG_SYS_INIT_RAM_SIZE - GENERATED_GBL_DATA_SIZE)
 #define CONFIG_SYS_INIT_SP_ADDR \
-	(CONFIG_SYS_INIT_RAM_ADDR + CONFIG_SYS_INIT_SP_OFFSET)
+  (CONFIG_SYS_INIT_RAM_ADDR + CONFIG_SYS_INIT_SP_OFFSET)
 
 /* FLASH and environment organization */
 #define CONFIG_SYS_NO_FLASH
 
-#define CONFIG_ENV_SIZE			(8 * 1024)
+#define CONFIG_ENV_SIZE     (8 * 1024)
 
 #define CONFIG_ENV_IS_IN_MMC
-#define CONFIG_ENV_OFFSET		(6 * 64 * 1024)
-#define CONFIG_SYS_MMC_ENV_DEV		0
+#define CONFIG_ENV_OFFSET   (6 * 64 * 1024)
+#define CONFIG_SYS_MMC_ENV_DEV    0
 
 #define CONFIG_OF_LIBFDT
 #define CONFIG_CMD_BOOTZ
@@ -365,4 +253,4 @@ extern char *config_sys_prompt;
 #define CONFIG_CMD_CACHE
 #endif
 
-#endif			       /* __CONFIG_H * */
+#endif             /* __CONFIG_H * */
